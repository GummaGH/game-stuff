<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sAvatar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>avatarMaxSpeed = 300 / room_speed
avatarSpeed = 0
avatarExplodeSpeed = 500 / room_speed
bulletSpeed = 600 / room_speed
recoilKick = 300 / room_speed
recoilDir = image_angle + 180
accelerationRate = 0.1
brakeRate = 0.2
turnRate = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(ord('W')) {
    avatarSpeed += accelerationRate
}

if keyboard_check(ord('S')) {
    avatarSpeed -= accelerationRate
}

if keyboard_check(ord('A')) { 
    image_angle += turnRate
}

if keyboard_check(ord('D')) { 
    image_angle -= turnRate
}

if avatarSpeed &gt; avatarMaxSpeed {
    avatarSpeed = avatarMaxSpeed
}

if avatarSpeed &lt; 0 {
    avatarSpeed = 0
    speed = avatarSpeed
}

if avatarSpeed &gt; 0 {
   direction = image_angle
   speed = avatarSpeed
}

/*
image_angle = point_direction(x, y, mouse_x, mouse_y)

if mouse_check_button(mb_left) {
    audio_play_sound(aShoot, 1, false)
    
    shotFired = instance_create(x, y, oBullet)
    
    shotFired.direction = image_angle
    shotFired.speed = bulletSpeed
    shotFired.image_angle = image_angle
    
    //x = x + lengthdir_x(recoilKick, recoilDir)
    //y = y + lengthdir_y(recoilKick, recoilDir)
}
*/

if keyboard_check(vk_space){
    audio_play_sound(aShoot, 1, false)
    
    shotFired = instance_create(x, y, oBullet)
    
    shotFired.direction = image_angle
    shotFired.speed = bulletSpeed
    shotFired.image_angle = image_angle
}

enemyContact = instance_place(x,y,oEnemy)

if x &lt; 0 { x = 0 }
if x &gt; room_width { x = room_width }

if y &lt; 0 { y = 0 }
if y &gt; room_height { y = room_height }

if instance_exists(enemyContact) {  
    
    bitsCreated = 0
    
    while bitsCreated &lt; oGame.avatarBits {
        newBit = instance_create(x, y, oAvatarChunk)
        bitsCreated += 1
    }    
    
    oGame.avatarDeathX = x
    oGame.avatarDeathY = y
    instance_destroy()
    audio_play_sound(aExplode, 1, false)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
